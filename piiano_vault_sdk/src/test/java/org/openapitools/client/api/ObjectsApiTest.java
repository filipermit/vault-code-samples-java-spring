/*
 * Piiano Vault REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ModelsObject;
import org.openapitools.client.model.ModelsObjectFieldsPage;
import org.openapitools.client.model.ModelsObjectID;
import org.openapitools.client.model.ModelsQuery;
import org.openapitools.client.model.RestHTTPError;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ObjectsApi
 */
@Disabled
public class ObjectsApiTest {

    private final ObjectsApi api = new ObjectsApi();

    /**
     * Add object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addObjectTest() throws ApiException {
        String collection = null;
        String reason = null;
        Map<String, Object> requestBody = null;
        String adhocReason = null;
        Boolean reloadCache = null;
        String ttl = null;
        ModelsObjectID response = api.addObject(collection, reason, requestBody, adhocReason, reloadCache, ttl);
        // TODO: test validations
    }

    /**
     * Delete object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteObjectByIdTest() throws ApiException {
        String collection = null;
        List<String> id = null;
        String reason = null;
        List<String> options = null;
        String adhocReason = null;
        Boolean reloadCache = null;
        api.deleteObjectById(collection, id, reason, options, adhocReason, reloadCache);
        // TODO: test validations
    }

    /**
     * List objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getObjectsTest() throws ApiException {
        String collection = null;
        String reason = null;
        String adhocReason = null;
        Boolean reloadCache = null;
        Integer pageSize = null;
        String cursor = null;
        List<UUID> id = null;
        List<String> options = null;
        List<String> props = null;
        ModelsObjectFieldsPage response = api.getObjects(collection, reason, adhocReason, reloadCache, pageSize, cursor, id, options, props);
        // TODO: test validations
    }

    /**
     * Get objects property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getObjectsPropertyTest() throws ApiException {
        String reason = null;
        String collection = null;
        String property = null;
        String adhocReason = null;
        Boolean reloadCache = null;
        Integer pageSize = null;
        String cursor = null;
        List<String> options = null;
        List<UUID> id = null;
        ModelsObjectFieldsPage response = api.getObjectsProperty(reason, collection, property, adhocReason, reloadCache, pageSize, cursor, options, id);
        // TODO: test validations
    }

    /**
     * Search objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchObjectsTest() throws ApiException {
        String collection = null;
        String reason = null;
        ModelsQuery modelsQuery = null;
        String adhocReason = null;
        Boolean reloadCache = null;
        Integer pageSize = null;
        String cursor = null;
        List<String> options = null;
        List<String> props = null;
        ModelsObjectFieldsPage response = api.searchObjects(collection, reason, modelsQuery, adhocReason, reloadCache, pageSize, cursor, options, props);
        // TODO: test validations
    }

    /**
     * Update object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateObjectByIdTest() throws ApiException {
        String collection = null;
        List<UUID> id = null;
        String reason = null;
        Map<String, Object> requestBody = null;
        String adhocReason = null;
        Boolean reloadCache = null;
        String ttl = null;
        List<String> options = null;
        api.updateObjectById(collection, id, reason, requestBody, adhocReason, reloadCache, ttl, options);
        // TODO: test validations
    }

}
